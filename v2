from datetime import datetime
from pymongo import MongoClient
 
def connect_to_mongodb():
    client = MongoClient('mongodb+srv://nachammaiganesan01:Nachammai2001@tododb.zthr6.mongodb.net/?retryWrites=true&w=majority&appName=ToDoDb')
   
    db = client['todo_db']  # Specify your database
    collection = db['user_collection']  # Specify your collection
    return client, collection
 
def show_menu():
    a = '''
To-Do List Menu
1. View To-Do List
2. Add Task
3. Remove Task
4. Exit '''
    print(a)
 
def view_tasks(collection):
    tasks = list(collection.find())  # Fetch all tasks from MongoDB
    if not tasks:
        print("\nYour To-Do list is empty.")
    else:
        print("\n")
        for i, task in enumerate(tasks, start=1):
            task_name = task.get('task_name', 'Unnamed Task')  # Safely access 'task_name'
            description = task.get('description', 'No description provided')  # Safely access 'description'
            print(f"{i}. {task_name} - {description}")



 
def add_task(collection):
    task_name = input("Enter a new task: ")
    description = input("Enter new description: ")
    if task_name:  # Ensure task_name is not empty
        task = {
            "task_name": task_name,
            "description": description,
            "created_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "updated_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        }
        collection.insert_one(task)
        print(f"{task_name} and its {description} has been added to the list.")
    else:
        print("Task name cannot be empty.")

 
def remove_task(collection):
    view_tasks(collection)  # Show current tasks
    tasks = list(collection.find())  # Fetch all tasks from MongoDB
    try:
        task_number = int(input("Enter the task number to remove: "))
        if 1 <= task_number <= len(tasks):
            removed_task = tasks[task_number - 1]
            collection.delete_one({"_id": removed_task["_id"]})  # Remove task from MongoDB
            print(f'"{removed_task["task_name"]}" has been removed.')
        else:
            print("Invalid task number.")
    except ValueError:
        print("Please Enter a Valid Number.")
 
def main():
    # Connect to MongoDB
    client, collection = connect_to_mongodb()
   
    try:
        while True:
            show_menu()
            choice = input("Choose an option (1-4): ")
            if choice == "1":
                view_tasks(collection)
            elif choice == "2":
                add_task(collection)
            elif choice == "3":
                remove_task(collection)
            elif choice == "4":
                print("Good Bye!")
                break
            else:
                print("Invalid Choice, Please Try Again.")
   
    finally:
        # Ensure MongoDB connection is closed
        client.close()
        print("MongoDB connection closed.")
 
if __name__ == "__main__":
    main()
